- Создается файл в папке проекта с разрешением .sh
- Открываем с помощью редактора nano, vi, vim или другой
- В начале каждого скрипта должна быть строка, называемая шебанг (shebang), 
которая сообщает операционной системе, какой интерпретатор использовать для выполнения скрипта.

#!/bin/bush # Комментарий через рештку полсе #! указывается путь к интерпретатору, который будет использоваться для запуска

- Далее пишется код с помощью стандартных команд Linux

- Для запуска файла его нужно сделать исполняемым

$ chmod [опции] права_доступа файл # права доступа - это спец. код, которыйзадает права доступа к файлу или директории
				   # чтобы сделать файл исполняем нужно добавить бит исполнения +x в опции комнады
$ chmod +x docker_load_botGPT

- Запуск скрипта:

$ ./docker_load_botGPT

======================
В скрипт можно передавать параметры при запуске исполняемого файла
для этого в коде можно Указать параметры имеющие вид $1, $2, $3 и т.д, а потом при запуске исполняемого файла
указать по порядку аргументы, которые будет выводить указанный параметр.
Например:
В файле указано 	      echo "Hello, $1!"
При запуске файла указываем   ./docker_load_botGPT.sh $USER
Вывод будет:                  Hello, alastergrume!
======================
Возможно использовать специальные параметры командной строки:

$0 — имя скрипта (то есть, имя файла, который был запущен)
$# — количество переданных параметров в скрипт
$* или $@ — список всех переданных параметров (в виде одной строки или массива соответственно)
$? — код возврата последней выполненной команды
======================
Переменные в Bash используются для хранения данных, таких как строки и числа. 
Они могут быть определены явно, путем присвоения значения, или неявно, 
путем автоматического присвоения значения при выполнении определенных операций. 
Для создания переменной в Bash необходимо присвоить ей значение, используя знак равенства (=).

company="Timeweb"
echo $company
======================
Также возможно присвоить значение переменной через ввод с клавиатуры с помощью команды read. 
Например, следующий скрипт запрашивает у пользователя имя и сохраняет его в переменной:
#!/bin/bash
echo "What is your name?"
read name
echo "Hello, $name!"
__________________________________________________
----------------- Команды Linux-------------------
__________________________________________________

echo - вывести в консоль сообщение. Synatax - echo "..."
read - возможно присвоить значение переменной через ввод с клавиатуры
$(date) используется для вызова команды date, которая возвращает текущую дату и время в формате, указанном в настройках системы.
__________________________________________________
----------------- Переменные Linux----------------
__________________________________________________
$USER - Выводит имя текущего пользователя
$HOME содержит путь к домашней директории пользователя
$PWD содержит путь к текущей рабочей директории.
$PATH содержит список директорий, в которых Bash ищет исполняемые файлы.

