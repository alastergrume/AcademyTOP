-------------------------- Копирование файлов между серверами ------------------------
Link: https://losst.pro/kopirovanie-fajlov-scp?ysclid=ltbeastbjv619563532

Syntax SCP:
$ scp опции пользователь1@хост1:файл пользователь2@хост2:файл
Опции утилиты больше касаются протокола SSH и настраивают общее ее поведение. Дальше следует адрес первого и второго файла. Каждый из них может быть расположен как на локальной, так и на удаленной машине. А теперь рассмотрим основные опции, которые могут нам понадобиться:

-1 - использовать протокол SSH1;
-2 - использовать протокол SSH2;
-B - пакетный режим для передачи нескольких файлов;
-C - включить сжатие;
- l - установить ограничение скорости в кбит/сек;
-o - задать нужную опцию SSH;
-p - сохранять время модификации;
-r - рекурсивное копирование директорий;
-v - более подробный режим.
~$ scp /home/sergiy/file root@losst.pro:/root/

====================== Передача файлов с одного удаленного сервера (находясь на нем) на другой удаленный сервер ====================== 

~$ scp /data/jenkins/DomainRetrieverHelpers/ERP.xml root@178.154.221.191:/home/agent-server

====================== Передача файлов с локального компьютера на удаленный сервер ====================== 

~$ scp -r /home/sergiy/photos/* root@losst.pro:/root/

====================== Передача файлов с удаленного сервера на локальный компьютер ====================== 

~$ scp root@losst.pro:/root/file /home/sergiy/

====================== Передача файлов и папок между серверами ======================

~$ scp root@losst.pro:/home/root/index.html root@losst.pro:/home/root/www/

~$ scp root@losst.pro:/root/photos root@losst.pro:/home/root/www/


------------------------------ Объем файловой системы ----------------------------------
в терминале отобразится сначала размер вложенных подпапок, а потом и самой папки. 
С помощью опции --max-depth можно задать максимальную глубину вложенности. 
Если вам интересна только сама папка, то глубина равна 0, если еще и вложенные в нее подпапки, то глубина равна 1 и больше:


~$ sudo du -h --max-depth=1 /home/root-user/Downloads | sort -rh
 

Открыть смонтированную папку

cd /mnt/hgfs/vm_dict


Просмотреть смонтированные диски: 
lsblk


====================================================
Для просмотра общей информации о системе в Linux, включая такие дистрибутивы как Ubuntu, вы можете использовать различные команды и утилиты. Вот несколько наиболее распространенных из них:

1. uname
Команда uname без параметров выводит ядро операционной системы. Вы можете использовать различные параметры с uname для получения более детальной информации:

uname -a: Выводит всю доступную информацию (имя ядра, имя хоста, версия ядра, версия операционной системы и др.).
2. lsb_release
Эта команда отображает информацию о дистрибутиве Linux:

lsb_release -a: Выводит информацию о дистрибутиве, включая его идентификатор, описание, выпуск и кодовое имя.
3. hostnamectl
Эта команда предоставляет информацию о системе и ее ядре, а также об используемом дистрибутиве и его версии:

Просто выполните hostnamectl, чтобы увидеть общую информацию о системе.
4. cat /etc/*release
Эта команда считывает содержимое файла, в котором хранится информация о версии дистрибутива:

cat /etc/*release: Выводит содержимое файла(ов) release, где хранится информация о версии дистрибутива и другие детали.
5. cat /proc/version
Показывает версию ядра Linux и информацию о компиляции:

Выполнение cat /proc/version даст вам информацию о вашей версии ядра Linux и детали о его компиляции.
6. neofetch или screenfetch
Это сторонние утилиты, которые не установлены по умолчанию на многих дистрибутивах. Они графически отображают информацию о системе в терминале:

Установите их с помощью вашего менеджера пакетов (sudo apt install neofetch или sudo apt install screenfetch для систем на базе Debian/Ubuntu).
Затем запустите neofetch или screenfetch, чтобы увидеть красочно оформленную информацию о системе, включая ОС, ядро, количество памяти, оболочку и др.
Выберите команду или комбинацию команд, которая наилучшим образом отвечает вашим требованиям к отображению информации о системе.

======================================================================================
Использование screen или tmux
Эти программы позволяют создавать отдельные сессии, которые продолжат работать в фоновом режиме, даже если текущее SSH-соединение будет потеряно.

Использование screen:

Установите screen (если он уже не установлен):

sudo apt-get install screen # Debian/Ubuntu
sudo yum install screen # CentOS/RHEL

Запустите screen, просто набрав screen в командной строке.

Запустите процесс создания образа внутри сессии screen.

Отсоединитесь от сессии, нажав Ctrl-A, а затем D.

Если соединение прервется, вы сможете вновь подключиться к серверу и возобновить сессию с помощью screen -r.

Использование tmux работает аналогично:

Установите tmux (если он уже не установлен).

Запустите tmux, просто набрав tmux.

Запустите процедуру сохранения образа.

Отсоединитесь от сессии tmux, нажав Ctrl-B, а затем D.

Для повторного подключения используйте tmux attach.

Использование nohup
Вы также можете использовать nohup для запуска команды в фоновом режиме независимо от сессии. Её особенность в том, что она игнорирует сигналы о разрыве соединения, что позволяет процессу продолжать работу:

nohup команда &

Здесь команда — это ваша команда для создания образа. Вся выводимая командой информация будет перенаправлена в файл nohup.out, если только не указано иное.

Каждый из этих методов поможет обеспечить, чтобы ваш процесс сохранения образа продолжался, даже если ваше соединение будет прервано.

---------------------------------
Когда screen -r показывает вам несколько отдельных сессий и говорит, что существует несколько подходящих экранов для восстановления, это означает, что у вас активно более одной отсоединенной сессии screen. Для подключения к конкретной сессии вам нужно указать либо её PID (идентификатор процесса), который предшествует точке перед именем хоста, либо полное имя терминала.

В вашем случае вы можете выбрать, к какой сессии screen подключиться, используя PID или название сессии. Например, для подключения к сессии с PID 6391, выполните:

screen -r 6391

Или можно использовать полное название сессии:

screen -r 6391.pts-5.agent-server

Если вы хотите принудительно отключить сессию (если она по какой-то причине не отсоединяется должным образом) и подключиться к ней, используйте:

screen -d 6391 -r 6391

или

screen -d -r 6391.pts-5.agent-server

Чтобы посмотреть список всех сессий screen, которые у вас есть, включая их статусы, вы можете использовать команду:

screen -ls

Это даст вам представление о том, какие сессии активны или отсоединены в данный момент.
-----------------------------------------------
Чтобы корректно завершить сессию screen, следуйте ниже приведённым инструкциям.

Когда вы находитесь внутри сессии screen:
Выйти из всех запущенных в screen приложений. Если это командная строка, достаточно ввести exit или нажать комбинацию клавиш Ctrl+D.
Завершение сессии screen. Если вы находитесь в самой сессии screen и хотите её закрыть, используйте команду exit или комбинацию клавиш Ctrl+D, как и при выходе из обычного терминала. Все запущенные в этой сессии процессы будут завершены, и сама сессия закроется.
Когда вы вне сессии screen:
Если вы в данный момент находитесь вне сессии screen и хотите завершить одну из существующих (отсоединенных) сессий, используйте следующие команды.

Выйти из сессии, не входя в него. Для этого можно использовать опцию -X команды screen:

screen -S [session # you want to quit] -X quit

Замените [session # you want to quit] на номер или название сессии, которую вы хотите завершить.

Примеры:
Если вам нужно завершить сессию screen с ID 1234.pts-1.yourhost, используйте команду:

screen -S 1234.pts-1.yourhost -X quit

Эта команда отправит команду quit в указанную сессию screen, что приведет к её завершению.

Проверка активных сессий:
После того как вы завершили необходимые сессии, чтобы убедиться, что они были корректно закрыты, вы можете использовать screen -ls для просмотра всех текущих сессий. Если сессия была завершена, она не будет отображаться в этом списке.

Имейте в виду, что при использовании команды для завершения сессии screen, все процессы, 
работающие в этих сессиях, также будут остановлены. 
Поэтому убедитесь, что необходимо сохранить все важные данные перед закрытием сессий.

=========================================================================================
https://itproblog.ru/page/3/
Посмотреть перечень доступные временных зон можно вот такой командой:
$ sudo timedatectl list-timezones

Устанавливаю нужную мне временную зону:
$ sudo timedatectl set-timezone Asia/Barnaul

=========================================================================================
для установки всех драйверов
ubuntu-drivers autoinstall

virt-manager
gufw